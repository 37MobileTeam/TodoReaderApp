//
// TodoApiV1TaskfoldersIdAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class TodoApiV1TaskfoldersIdAPI {
    /**
     tasks
     
     - parameter id: (path)  
     - parameter deltatoken: (query) 令牌 (optional)
     - parameter maxPageSize: (query) 最大页数 (optional)
     - parameter parentFolderId: (query) 父文件夹ID (optional)
     - parameter expand: (query) 扩展 (optional)
     - parameter authorization: (header) 认证 (optional)
     - parameter MS_CV: (header) 未知 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func todob2ApiV1IdTasksGet(id: String, deltatoken: String? = nil, maxPageSize: String? = nil, parentFolderId: String? = nil, expand: String? = nil, authorization: String? = nil, MS_CV: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: InlineResponse20012?,_ error: Error?) -> Void)) {
        todob2ApiV1IdTasksGetWithRequestBuilder(id: id, deltatoken: deltatoken, maxPageSize: maxPageSize, parentFolderId: parentFolderId, expand: expand, authorization: authorization, MS_CV: MS_CV).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     tasks
     - GET /todob2/api/v1/{id}/tasks
     - parameter id: (path)  
     - parameter deltatoken: (query) 令牌 (optional)
     - parameter maxPageSize: (query) 最大页数 (optional)
     - parameter parentFolderId: (query) 父文件夹ID (optional)
     - parameter expand: (query) 扩展 (optional)
     - parameter authorization: (header) 认证 (optional)
     - parameter MS_CV: (header) 未知 (optional)
     - returns: RequestBuilder<InlineResponse20012> 
     */
    open class func todob2ApiV1IdTasksGetWithRequestBuilder(id: String, deltatoken: String? = nil, maxPageSize: String? = nil, parentFolderId: String? = nil, expand: String? = nil, authorization: String? = nil, MS_CV: String? = nil) -> RequestBuilder<InlineResponse20012> {
        var path = "/todob2/api/v1/{id}/tasks"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "deltatoken": deltatoken?.encodeToJSON(), 
            "maxPageSize": maxPageSize?.encodeToJSON(), 
            "parentFolderId": parentFolderId?.encodeToJSON(), 
            "$expand": expand?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization?.encodeToJSON(),
            "MS-CV": MS_CV?.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<InlineResponse20012>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
